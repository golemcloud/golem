package golem:it;

interface api {
  use wasi:rdbms/postgres@0.0.1.{db-row as postgres-db-row, db-column as postgres-db-column};
  use wasi:rdbms/mysql@0.0.1.{db-row as mysql-db-row, db-column as mysql-db-column};

  record postgres-query-result {
    columns: list<postgres-db-column>,
    rows: list<postgres-db-row>
  }

  record mysql-query-result {
    columns: list<mysql-db-column>,
    rows: list<mysql-db-row>
  }

  check: func() -> string;

  mysql-execute: func(statement: string, params: list<string>) -> result<u64, string>;

  mysql-query: func(statement: string, params: list<string>) -> result<mysql-query-result, string>;

  postgres-execute: func(statement: string, params: list<string>) -> result<u64, string>;

  postgres-query: func(statement: string, params: list<string>) -> result<postgres-query-result, string>;
}

world rdbms-service {
  import wasi:rdbms/postgres@0.0.1;
  import wasi:rdbms/mysql@0.0.1;
  export api;
}