package golem:it;

interface api {
  use golem:api/host@0.2.0.{
           component-id,
           worker-id,
           component-version,
           update-mode,
           worker-any-filter,
           worker-metadata
  };
  get-self-uri: func(function-name: string) -> string;
  jump: func() -> u64;
  fail-with-custom-max-retries: func(max-retries: u64) -> ();
  explicit-commit: func(replicas: u8) -> ();
  atomic-region: func() -> ();
  idempotence-flag: func(enabled: bool) -> ();
  persist-nothing: func() -> ();
  get-workers: func(component-id: component-id, filter: option<worker-any-filter>, precise: bool) -> list<worker-metadata>;
  get-self-metadata: func() -> worker-metadata;
  get-worker-metadata: func(worker-id: worker-id) -> option<worker-metadata>;
  update-worker: func(worker-id: worker-id, component-version: component-version, update-mode: update-mode) -> ();
}

world runtime-service {
  import golem:api/host@0.2.0;
  import wasi:io/poll@0.2.0;
  import wasi:io/streams@0.2.0;
  import wasi:http/types@0.2.0;
  import wasi:http/outgoing-handler@0.2.0;

  export api;
}