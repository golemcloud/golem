package golem:it;

interface api {
  use golem:api/host@1.1.7.{
           component-id,
           agent-id,
           component-version,
           update-mode,
           agent-any-filter,
           agent-metadata,
           uuid
  };


  jump: func() -> u64;
  fail-with-custom-max-retries: func(max-retries: u64);
  explicit-commit: func(replicas: u8);
  atomic-region: func();
  idempotence-flag: func(enabled: bool);
  persist-nothing: func();
  get-workers: func(component-id: component-id, filter: option<agent-any-filter>, precise: bool) -> list<agent-metadata>;
  get-self-metadata: func() -> agent-metadata;
  get-worker-metadata: func(agent-id: agent-id) -> option<agent-metadata>;
  update-worker: func(agent-id: agent-id, component-version: component-version, update-mode: update-mode);

  generate-idempotency-keys: func() -> tuple<uuid, uuid>;
}

world runtime-service {
  import golem:api/host@1.1.7;
  import wasi:io/poll@0.2.3;
  import wasi:io/streams@0.2.3;
  import wasi:http/types@0.2.3;
  import wasi:http/outgoing-handler@0.2.3;

  export api;
}