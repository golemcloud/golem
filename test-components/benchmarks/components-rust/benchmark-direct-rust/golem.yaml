# Schema for IDEA:
# $schema: https://schema.golem.cloud/app/golem/1.3.0/golem.schema.json
# Schema for vscode-yaml:
# yaml-language-server: $schema=https://schema.golem.cloud/app/golem/1.3.0/golem.schema.json

# Field reference: https://learn.golem.cloud/app-manifest#field-reference
# Creating HTTP APIs: https://learn.golem.cloud/invoke/making-custom-apis

components:
  benchmark:direct-rust:
    template: rust

httpApi:
  definitions:
    benchmark-direct-rust-api:
      version: '0.0.1'
      routes:
        - method: POST
          path: /benchmark-direct-rust-api/{name}/echo/{param}
          binding:
            type: default
            componentName: benchmark:direct-rust
            response: |
              let name: string = request.path.name;
              let worker = instance(name);
              let result = worker.echo(request.path.param);
              { status: 200, body: { result: "${result}" } }
        - method: POST
          path: /benchmark-direct-rust-api/{name}/large-input
          binding:
            type: default
            componentName: benchmark:direct-rust
            response: |
              let name: string = request.path.name;
              let worker = instance(name);
              let result: u32 = worker.large-input(request.body.input);
              { status: 200, body: { result: "${result}" } }
        - method: POST
          path: /benchmark-direct-rust-api/{name}/cpu-intensive
          binding:
            type: default
            componentName: benchmark:direct-rust
            response: |
              let name: string = request.path.name;
              let worker = instance(name);
              let result: u32 = worker.cpu-intensive(request.body.length);
              { status: 200, body: { result: "${result}" } }

  deployments:
    local:
      - host: localhost:8084
        definitions:
          - benchmark-direct-rust-api
