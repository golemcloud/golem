syntax = "proto3";

package golem.apidefinition;

import "golem/common/empty.proto";
import "golem/template/template_id.proto";
import "golem/apidefinition/api_definition_registration_error.proto";

service ApiDefinitionService {
  rpc CreateOrUpdateApiDefinition (CreateOrUpdateApiDefinitionRequest) returns (CreateOrUpdateResponseApiDefinitionResponse) {}
  rpc CreateOrUpdateOpenApiDefinition (CreateOrUpdateOpenApiRequest) returns (CreateOrUpdateOpenApiResponse) {}
  rpc GetApiDefinition (GetApiDefinitionRequest) returns (GetApiDefinitionResponse) {}
  rpc GetAllApiDefinitionVersions (GetAllApiDefinitionVersionsRequest) returns (GetAllApiDefinitionVersionsResponse) {}
  rpc GetAllApiDefinitions (GetAllApiDefinitionsRequest) returns (GetAllApiDefinitionsResponse) {}
  rpc Delete (DeleteApiDefinitionRequest) returns (DeleteApiDefinitionResponse) {}
}

message CreateOrUpdateOpenApiRequest {
  string payload = 1;
}

message CreateOrUpdateOpenApiResponse {
  oneof result {
    HttpApiDefinition success = 1;
    ApiDefinitionRegistrationError error = 2;
  }
}

message CreateOrUpdateApiDefinitionRequest {
  HttpApiDefinition payload = 1;
}

message CreateOrUpdateResponseApiDefinitionResponse {
  oneof result {
    HttpApiDefinition success = 1;
    ApiDefinitionRegistrationError error = 2;
  }
}

message GetApiDefinitionRequest {
  string api_definition_id = 1;
  string version = 2;
}

message GetApiDefinitionResponse {
  oneof result {
    HttpApiDefinition success = 1;
    ApiDefinitionRegistrationError error = 2;
  }
}

message GetAllApiDefinitionVersionsRequest {
  string api_definition_id = 1;
}

message GetAllApiDefinitionVersionsResponse {
  oneof result {
    HttpApiDefinitionList success = 1;
    ApiDefinitionRegistrationError error = 2;
  }
}

message HttpApiDefinitionList {
  repeated HttpApiDefinition api_definitions = 1;
}

message DeleteApiDefinitionRequest {
  string api_definition_id = 1;
  string version = 2;
}

message DeleteApiDefinitionResponse {
  oneof result {
    golem.common.Empty success = 1;
    ApiDefinitionRegistrationError error = 2;
  }
}

message GetAllApiDefinitionsRequest {}

message GetAllApiDefinitionsResponse {
  oneof result {
    HttpApiDefinitionList success = 1;
    ApiDefinitionRegistrationError error = 2;
  }
}

message HttpApiDefinition {
  string id = 1;
  string version = 2;
  repeated HttpRoute routes = 3;
}

message HttpRoute {
  HttpMethod method = 1;
  string path = 2;
  GolemWorkerBinding binding = 3;
}

enum HttpMethod {
  GET = 0;
  CONNECT = 1;
  POST = 2;
  DELETE = 3; 
  PUT = 4;
  PATCH = 5;
  OPTIONS = 6;
  TRACE = 7;
  HEAD = 8;
}

message GolemWorkerBinding {
  golem.template.TemplateId template = 1;
  string worker_id = 2;
  string function_name = 3;
  repeated string function_params = 4;
  optional string response = 5;
}
