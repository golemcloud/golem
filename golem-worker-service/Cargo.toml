[package]
name = "golem-worker-service"
version = "0.0.0"
edition = "2021"

homepage = "https://golem.cloud"
repository = "https://github.com/golemcloud/golem"
description = "Golem Worker Service including API Gateway functionalities"

license-file = "../LICENSE"

[[bin]]
name = "golem-worker-service"
path = "src/server.rs"
test = false

[lib]
harness = false

[[test]]
name = "services_tests"
path = "tests/services_tests.rs"
harness = false

[[test]]
name = "api_gateway_end_to_end_tests"
path = "tests/api_gateway_end_to_end_tests.rs"
harness = false

[[bench]]
name = "tree"
harness = false

[dependencies]
golem-api-grpc = { path = "../golem-api-grpc", version = "=0.0.0" }
golem-common = { path = "../golem-common", version = "=0.0.0" }
golem-rib = { path = "../golem-rib", version = "=0.0.0" }
golem-service-base = { path = "../golem-service-base", version = "=0.0.0" }
golem-wasm-ast = { path = "../wasm-ast", version = "=0.0.0" }
golem-wasm-rpc = { path = "../wasm-rpc", version = "=0.0.0" }

anyhow = { workspace = true }
async-trait = { workspace = true }
bigdecimal = { workspace = true }
bincode = { workspace = true }
bytes = { workspace = true }
chrono = { workspace = true }
conditional-trait-gen = { workspace = true }
darling = { workspace = true }
derive_more = { workspace = true }
figment = { workspace = true }
fred = { workspace = true }
futures = { workspace = true }
headers = { workspace = true }
http = { workspace = true }
http-body-util = { workspace = true }
hyper = { workspace = true }
include_dir = { workspace = true }
mime = { workspace = true }
mime_guess = { workspace = true }
nom = { workspace = true }
openapiv3 = { workspace = true }
openidconnect = { workspace = true }
opentelemetry = { workspace = true }
opentelemetry-prometheus = { workspace = true }
opentelemetry_sdk = { workspace = true }
poem = { workspace = true, features = ["prometheus", "opentelemetry"] }
poem-derive = { workspace = true }
poem-openapi = { workspace = true }
poem-openapi-derive = { workspace = true }
prometheus = { workspace = true }
prost = { workspace = true }
prost-types = { workspace = true }
regex = { workspace = true }
rustc-hash = { workspace = true }
rusoto_acm = { workspace = true }
rusoto_core = { workspace = true }
rusoto_credential = { workspace = true }
rusoto_elbv2 = { workspace = true }
rusoto_route53 = { workspace = true }
rusoto_sts = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serde_yaml = { workspace = true }
indexmap = { workspace = true }
sqlx = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
tap = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true }
tokio-stream = { workspace = true }
tokio-util = { workspace = true }
tonic = { workspace = true }
tonic-health = { workspace = true }
tonic-reflection = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["fmt", "std", "json"] }
url = { workspace = true }
urlencoding = { workspace = true }
uuid = { workspace = true }
x509-certificate = { workspace = true }

[dev-dependencies]
assert2 = { workspace = true }
criterion = { workspace = true, features = ["html_reports"] }
fastrand = {workspace = true }
reqwest = { workspace = true }
rsa = { workspace = true }
testcontainers = { workspace = true }
testcontainers-modules = { workspace = true }
test-r = { workspace = true }
tryhard = { workspace = true }
