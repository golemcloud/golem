[workspace]
resolver = "2"

members = [
    "golem-worker-executor-base",
    "golem-worker-executor",
    "golem-common",
    "golem-api-grpc",
    "golem-service-base",
    "golem-template-service",
    "golem-shard-manager",
    "golem-worker-service",
    "golem-template-compilation-service"
]

exclude = [
    "test-templates/shopping-cart",
    "test-templates/write-stdout",
    "wasmtime",
    "test-templates/blob-store-service",
    "test-templates/clock-service",
    "test-templates/clocks",
    "test-templates/directories",
    "test-templates/environment-service",
    "test-templates/failing-component",
    "test-templates/file-service",
    "test-templates/file-write-read-delete",
    "test-templates/flags-service",
    "test-templates/http-client",
    "test-templates/http-client-2",
    "test-templates/interruption",
    "test-templates/key-value-service",
    "test-templates/networking",
    "test-templates/option-service",
    "test-templates/promise",
    "test-templates/read-stdin",
    "test-templates/runtime-service",
    "test-templates/shopping-cart",
    "test-templates/shopping-cart-resource",
    "test-templates/stdio-cc",
    "test-templates/variant-service",
    "test-templates/write-stderr",
    "test-templates/write-stdout",
    "golem-openapi-client-generator",
    "golem-client",
    "golem-cli",
    "libtest-mimic",
    "wasm-rpc",
]

[workspace.dependencies]
anyhow = "1.0.79"
async-trait = "0.1.77"
aws-config = "1.1.3"
aws-sdk-s3 = "1.13.0"
bincode = { version = "2.0.0-rc.3", features = ["serde"] }
bytes = "1.5.0"
chrono = { version = "0.4.32", features = ["serde"] }
console-subscriber = "0.2.0"
dashmap = "5.5.3"
figment = { version = "0.10.14", features = ["toml", "env"] }
fred = { version = "8.0.0", features = [
    "metrics",
    "serde-json",
    "partial-tracing",
] }
futures = "0.3"
futures-core = "0.3.29"
futures-util = "0.3.29"
golem-wasm-ast = "0.2.1"
http = "1.0.0" # keep in sync with wasmtime
humantime-serde = "1.1.1"
hyper = { version = "1.0.1", features = ["full"] } # keep in sync with wasmtime
iso8601-timestamp = "0.2.16"
lazy_static = "1.4.0"
poem = "2.0.0"
opentelemetry = "0.21.0"
opentelemetry-prometheus = "0.14.1"
opentelemetry_sdk = "0.21.2"
poem-openapi = { version = "4.0.0", features = [
    "swagger-ui",
    "chrono",
    "time",
    "humantime",
    "uuid",
    "url",
    "websocket",
] }
prometheus = { version = "0.13.3", features = ["process"] }
proptest = "1.4.0"
prost = "0.12.3"
rustls = { version = "0.22.2" }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }
tempfile = "3.9.0"
thiserror = "1.0.56"
tokio = { version = "1.0", features = [
    "macros",
    "rt-multi-thread",
    "sync",
    "io-std",
    "net",
    "tracing",
] }
tokio-rustls = { version = "0.25.0" }
tokio-stream = { version = "0.1", features = ["sync"] }
tonic = "0.10.2"
tonic-reflection = "0.10.2"
tonic-health = "0.10.2"
tracing = { version = "0.1.40", features = ["log"] }
tracing-opentelemetry = "0.22.0"
tracing-subscriber = { version = "0.3.17", features = [
    "env-filter",
    "fmt",
    "std",
    "json",
] }
url = "2.5.0"
uuid = { version = "1.7.0", features = ["serde", "v4"] }
warp = "0.3.6"
webpki-roots = { version = "0.26.0" }

[patch.crates-io]
wasmtime = { path = "wasmtime/crates/wasmtime" }
wasmtime-runtime = { path = "wasmtime/crates/runtime" }
wasmtime-wasi = { path = "wasmtime/crates/wasi" }
wasmtime-wasi-http = { path = "wasmtime/crates/wasi-http" }
