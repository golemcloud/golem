[workspace]
resolver = "2"

members = [
    "cloud-service",
    "golem-api-grpc",
    "golem-client",
    "golem-common",
    "golem-debugging-service",
    "golem-service-base",
    "golem-component-service",
    "golem-component-compilation-service",
    "golem-rib",
    "golem-rib-repl",
    "golem-test-framework",
    "golem-shard-manager",
    "golem-worker-executor",
    "golem-worker-service",
    "integration-tests",
    "wasm-ast",
    "wasm-rpc",
    "wasm-rpc-derive",
    "cli/golem",
    "cli/golem-cli",
    "cli/golem-templates",
]

exclude = [
    "cli/desktop-app/src-tauri",
    "cli/template-golem-agent-ts",
    "test-components/app-and-library",
    "test-components/shopping-cart",
    "test-components/write-stdout",
    "test-components/blob-store-service",
    "test-components/clock-service",
    "test-components/clocks",
    "test-components/component-resolve",
    "test-components/directories",
    "test-components/durability-overhead",
    "test-components/environment-service",
    "test-components/failing-component",
    "test-components/file-service",
    "test-components/file-write-read-delete",
    "test-components/flags-service",
    "test-components/golem-rust-tests",
    "test-components/high-volume-logging",
    "test-components/http-client",
    "test-components/http-client-2",
    "test-components/http-client-3",
    "test-components/ifs-update",
    "test-components/ifs-update-inside-exported-function",
    "test-components/interruption",
    "test-components/initial-file-read-write",
    "test-components/key-value-service",
    "test-components/logging",
    "test-components/networking",
    "test-components/oplog-processor",
    "test-components/option-service",
    "test-components/promise",
    "test-components/read-stdin",
    "test-components/runtime-service",
    "test-components/rust-echo",
    "test-components/rust-service",
    "test-components/scheduled-invocation",
    "test-components/shopping-cart",
    "test-components/shopping-cart-resource",
    "test-components/stdio-cc",
    "test-components/update-test-v1",
    "test-components/update-test-v2-11",
    "test-components/update-test-v3-11",
    "test-components/update-test-v3-sdk",
    "test-components/update-test-v4",
    "test-components/update-test-env-var",
    "test-components/variant-service",
    "test-components/wasi-config",
    "test-components/wasi-http-incoming-request-handler",
    "test-components/wasi-http-incoming-request-handler-echo",
    "test-components/wasi-http-incoming-request-handler-state",
    "test-components/write-stderr",
    "test-components/write-stdout",
    "test-components/rdbms-service",
    "sdks/golem-rust"
]

[workspace.metadata]
license-file = "LICENSE"

[workspace.dependencies]
golem-api-grpc = { version = "=0.0.0", path = "golem-api-grpc" }
golem-cli = { version = "=0.0.0", path = "cli/golem-cli" }
golem-client = { version = "=0.0.0", path = "golem-client" }
golem-common = { version = "=0.0.0", path = "golem-common", default-features = false }
golem-component-compilation-service = { path = "golem-component-compilation-service" }
golem-component-service = { path = "golem-component-service" }
golem-openapi-client-generator = "=0.0.16"
golem-rib = { version = "=0.0.0", path = "golem-rib", default-features = false }
golem-rib-repl = { version = "=0.0.0", path = "golem-rib-repl" }
golem-service-base = { version = "=0.0.0", path = "golem-service-base" }
golem-shard-manager = { path = "golem-shard-manager" }
golem-templates = { version = "=0.0.0", path = "cli/golem-templates" }
golem-test-framework = { version = "=0.0.0", path = "golem-test-framework" }
golem-wasm-ast = { version = "=0.0.0", path = "wasm-ast", default-features = false }
golem-wasm-rpc = { version = "=0.0.0", path = "wasm-rpc", default-features = false }
golem-wasm-rpc-derive = { version = "=0.0.0", path = "wasm-rpc-derive" }
golem-worker-executor = { version = "=0.0.0", path = "golem-worker-executor" }
golem-worker-service = { path = "golem-worker-service" }


anyhow = "1.0.97"
applying = "1.0.1"
assert2 = "0.3.15"
async-dropper = { version = "0.3.1", features = ["simple", "tokio"] }
async-dropper-simple = { version = "0.2.6", features = [
    "no-default-bound",
    "tokio",
] }
async-fs = "2.1.2"
async-hash = "0.5.4"
async-lock = "3.4.0"
async-recursion = "1.1.1"
async-trait = "0.1.87"
async_zip = { version = "0.0.17", features = ["tokio", "tokio-fs", "deflate"] }
aws-config = "=1.5.10" # Pinned because newer versions were failing with localstack
aws-sdk-s3 = "=1.65.0" # Pinned because newer versions were failing with localstack
axum = { version = "0.7.9", features = ["multipart"] }
axum-jrpc = "0.7.1"
base64 = "0.22.1"
bigdecimal = { version = "0.4.7", features = ["serde", "string-only"] }
bincode = { version = "2.0.1", features = ["serde"] }
bincode_derive = { version = "2.0.1" }
bit-vec = { version = "0.6.3", features = ["serde"] }
blake3 = "1.5.5"
bytes = "1.10.1"
camino = "1.1.10"
cap-std = "3.4.2" # keep in sync with wasmtime
cargo-component = "0.21.1"
cargo-component-core = "0.21.1"
cargo_metadata = "0.21.0"
cargo_toml = "0.22.1"
chrono = { version = "0.4.40", features = ["serde"] }
clap = { version = "4.5.32", features = [
    "derive",
    "suggestions",
    "color",
    "help",
] }
clap-verbosity-flag = { version = "3.0.2", features = ["tracing"] }
clap_complete = "4.5.45"
cli-table = "0.4.9"
colored = "3.0.0"
combine = "4.6.7"
conditional-trait-gen = "0.4.1"
console-subscriber = "0.4.1"
convert_case = "0.8.0"
criterion = "0.5"
crossterm = "0.28.1"
darling = "0.20.11"
dashmap = "6.1.0"
derive_more = { version = "2.0.1", features = ["display", "into", "from_str"] }
dirs = "4.0.0"
drop-stream = "0.3.2"
dir-diff = "0.3.3"
envsubst = "0.2.1"
fancy-regex = "0.14.0"
fastrand = "2.3.0"
figment = { version = "0.10.19", features = ["toml", "env"] }
fred = { version = "=9.4.0", features = [
    "metrics",
    "serde-json",
    "partial-tracing",
] } # pinned to 9.x to avoid conflicting cookie-factory dependencies
fs_extra = "1.3.0"
futures = "0.3.31"
futures-concurrency = "7.6.3"
futures-util = "0.3.31"
fuzzy-matcher = "0.3.7"
gethostname = "1.0.0"
headers = "0.4.0"
heck = "0.5.0"
hex = "0.4.3"
http = "1.3.1"
http-body = "1.0.1"
http-body-util = "0.1.3"
humansize = "2.1.3"
humantime-serde = "1.1.1"
hyper = { version = "1.6.0", features = ["full"] }
include_dir = "0.7.4"
indexmap = "2.10.0"
indoc = "2.0.5"
inquire = "0.7.5"
iso8601 = "0.6.2"
iso8601-timestamp = "0.3.3"
itertools = "0.14.0"
jsonwebtoken = "9.2.0"
k8s-openapi = { version = "0.24.0", features = ["earliest"] }
kube = { version = "0.98.0", features = ["runtime", "derive"] }
kube-derive = "0.98.0"
lazy_static = "1.5.0"
lenient_bool = "0.1.1"
log = "0.4.26"
mappable-rc = "0.1.1"
mime = "0.3.17"
mime_guess = "2.0.5"
minijinja = "2.7.0"
moonbit-component-generator = { version = "0.0.2", features = ["get-script"] }
nanoid = "0.4.0"
native-tls = "0.2.13"
nondestructive = "0.0.26"
nom = "7.1.3"
nonempty-collections = "0.3.0"
num-traits = "0.2.19"
once_cell = "1.21.0"
openapiv3 = "=2.0.0"
openidconnect = "3.5.0"
opentelemetry = "0.28.0"
opentelemetry-prometheus = "0.28.0"
opentelemetry_sdk = "0.28.0"
phf = { version = "0.11.3", features = ["macros"] }
poem = { version = "=3.1.10", features = [
    "cookie",
    "multipart",
    "opentelemetry",
    "prometheus",
    "test",
] }
poem-derive = { version = "=3.1.10" }
poem-openapi = { version = "=5.1.14", features = [
    "chrono",
    "cookie",
    "humantime",
    "swagger-ui",
    "time",
    "url",
    "uuid",
    "websocket",
] }
poem-openapi-derive = "=5.1.14"
postgres = "0.19.10"
pretty_env_logger = "0.5.0"
prettyplease = "0.2.25"
proc-macro2 = "1.0.92"
prometheus = { version = "0.13.4", features = ["process"] }
proptest = "=1.5.0"
prost = "0.13.5"
prost-types = "0.13.5"
quote = "1.0.37"
rand = "0.9.0"
redis = { version = "0.29.1", features = ["default", "tokio-comp"] }
regex = "1.11.1"
reqwest = { version = "0.12.13", features = [
    "gzip",
    "json",
    "multipart",
    "stream",
] }
rsa = "0.9.7"
rusoto_acm = "0.48.0"
rusoto_core = "0.48.0"
rusoto_credential = "0.48.0"
rusoto_elbv2 = "0.48.0"
rusoto_route53 = "0.48.0"
rusoto_sts = "0.48.0"
rustc-hash = "2.1.1"
rustls = { version = "0.23.23" }
rustyline = "15.0.0"
sanitize-filename = "0.6.0"
semver = "1.0.26"
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0", features = ["raw_value"] }
serde_json_path = "0.7.1"
serde_with = "3.5.0"
serde_yaml = { version = "0.9.34" }
sha2 = "0.10.8"
shadow-rs = "1.2.0"
shell-words = "1.1.0"
shlex = "1.3.0"
similar = "2.7.0"
sqlx-core = { version = "0.8" }
sqlx = { version = "0.8", features = [
    "runtime-tokio",
    "sqlite",
    "postgres",
    "mysql",
    "uuid",
    "migrate",
    "chrono",
    "json",
    "bigdecimal",
    "mac_address",
    "bit-vec",
    "ipnetwork",
] }
strip-ansi-escapes = "0.2.0"
strum = "0.27.1"
strum_macros = "0.27.1"
syn = "2.0.90"
system-interface = "0.27.3"
tap = "1.0.1"
tempfile = "3.18.0"
testcontainers = { version = "0.23.3" }
testcontainers-modules = { version = "0.11.6", features = [
    "postgres",
    "redis",
    "minio",
    "mysql",
] }
test-r = { version = "2.2.1", default-features = true }
thiserror = "2.0.12"
time = { version = "0.3.41", features = ["default", "macros"] }
terminal_size = "0.4.2"
textwrap = "0.16.1"
tokio = { version = "1.44", features = [
    "macros",
    "rt-multi-thread",
    "sync",
    "io-std",
    "net",
    "tracing",
    "process",
] }
tokio-postgres = "0.7.13"
tokio-rustls = { version = "0.26.2" }
tokio-stream = { version = "0.1", features = ["sync"] }
tokio-tungstenite = { version = "0.25.0", features = ["native-tls"] }
tokio-util = "0.7.13"
toml = "0.9.5"
toml_edit = "0.23.3"
tonic = { version = "0.12.3", features = ["gzip"] }
tonic-reflection = "0.12.3"
tonic-health = "0.12.3"
tracing = { version = "0.1.41", features = ["log"] }
tracing-futures = "0.2.5"
tracing-serde = "0.2.0"
tracing-subscriber = { version = "0.3.19", features = [
    "env-filter",
    "fmt",
    "std",
    "json",
] }
tracing-test = "0.2.5"
tryhard = "0.5.1"
typed-path = "0.10.0"
url = { version = "2.5.4", features = ["serde"] }
urlencoding = "2.1.3"
uuid = { version = "1.15.1", features = ["serde", "v4", "v5"] }
version-compare = "0.2.0"
wac-graph = "=0.6.1"
walkdir = "2.5.0"
wasm-encoder = "0.235.0"
wasm-metadata = { version = "0.235.0", features = ["oci"] }
wasm-rquickjs = "0.0.5"
wasm-wave = "0.235"
wasmparser = "0.235.0"
wasmtime = { version = "=33.0.0", features = ["component-model"] }
wasmtime-wasi = { version = "=33.0.0" }
wasmtime-wasi-http = { version = "=33.0.0" }
wax = "0.6.0"
webpki-roots = { version = "0.26.7" }
wit-bindgen = "0.43.0"
wit-bindgen-rust = "0.43.0"
wit-component = "0.235"
wit-parser = "0.235"
wit-encoder = "0.235"
x509-certificate = "0.23.1"
arbitrary = "1.4.1"
async-mutex = "1.4.0"
async-rwlock = "1.3.0"
async-scoped = "0.9.0"
auditable-serde = "0.8.0"
bitflags = "2.6.0"
cap-time-ext = "3.4.2"
cloud-service = { path = "cloud-service" }
colored-diff = "0.2.3"
evicting_cache_map = "0.4.0"
flate2 = "1.1.0"
fs-set-times = "0.20.3"
git-version = "0.3.9"
goldenfile = "1.8.0"
kill_tree = "0.2.4"
leb128 = "0.2.5"
mac_address = "1.1.8"
md5 = "0.7.0"
metrohash = "1.0.7"
pin-project = "1.1.10"
pretty_assertions = "1.4.1"
proptest-arbitrary-interop = "0.1.0"
prost-build = "0.13.5"
range-set-blaze = "0.1.16"
ringbuf = "0.4.7"
serde_derive = "1.0.219"
spdx = "0.10.8"
sysinfo = "0.33.1"
tonic-build = "0.12.3"
try_match = "0.4.2"
wasmprinter = "0.219.1"
wit-bindgen-rt = "=0.40.0"
zstd = "0.13"

[patch.crates-io]
redis-protocol = { git = "https://github.com/golemcloud/redis-protocol.rs.git", branch = "unpin-cookie-factory" }
wasmtime = { git = "https://github.com/golemcloud/wasmtime.git", branch = "golem-wasmtime-v33.0.0" }
wasmtime-wasi = { git = "https://github.com/golemcloud/wasmtime.git", branch = "golem-wasmtime-v33.0.0" }
wasmtime-wasi-http = { git = "https://github.com/golemcloud/wasmtime.git", branch = "golem-wasmtime-v33.0.0" }

[profile.dev]
panic = "abort"

[profile.release]
panic = "abort"
