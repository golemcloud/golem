[workspace]
resolver = "2"

members = [
    "golem-api-grpc",
    "golem-client",
    "golem-common",
    "golem-service-base",
    "golem-component-compilation-service",
    "golem-component-service-base",
    "golem-component-service",
    "golem-rib",
    "golem-rib-repl",
    "golem-test-framework",
    "golem-shard-manager",
    "golem-worker-executor-base",
    "golem-worker-executor",
    "golem-worker-service-base",
    "golem-worker-service",
    "integration-tests",
    "wasm-ast",
    "wasm-rpc"
]

exclude = [
    "test-components/app-and-library",
    "test-components/shopping-cart",
    "test-components/write-stdout",
    "test-components/blob-store-service",
    "test-components/clock-service",
    "test-components/clocks",
    "test-components/component-resolve",
    "test-components/directories",
    "test-components/durability-overhead",
    "test-components/environment-service",
    "test-components/failing-component",
    "test-components/file-service",
    "test-components/file-write-read-delete",
    "test-components/flags-service",
    "test-components/golem-rust-tests",
    "test-components/http-client",
    "test-components/http-client-2",
    "test-components/interruption",
    "test-components/initial-file-read-write",
    "test-components/key-value-service",
    "test-components/logging",
    "test-components/networking",
    "test-components/oplog-processor",
    "test-components/option-service",
    "test-components/promise",
    "test-components/read-stdin",
    "test-components/runtime-service",
    "test-components/rust-echo",
    "test-components/rust-service",
    "test-components/scheduled-invocation",
    "test-components/shopping-cart",
    "test-components/shopping-cart-resource",
    "test-components/stdio-cc",
    "test-components/update-test-v1",
    "test-components/update-test-v2-11",
    "test-components/update-test-v3-11",
    "test-components/update-test-v3-sdk",
    "test-components/update-test-v4",
    "test-components/variant-service",
    "test-components/wasi-http-incoming-request-handler",
    "test-components/wasi-http-incoming-request-handler-echo",
    "test-components/wasi-http-incoming-request-handler-state",
    "test-components/write-stderr",
    "test-components/write-stdout",
    "test-components/rdbms-service"
]

[workspace.dependencies]
anyhow = "1.0.97"
assert2 = "0.3.15"
async-fs = "2.1.2"
async-hash = "0.5.4"
async-recursion = "1.1.1"
async-trait = "0.1.87"
async_zip = "0.0.17"
aws-config = "=1.5.10" # Pinned because newer versions were failing with localstack
aws-sdk-s3 = "=1.65.0" # Pinned because newer versions were failing with localstack
axum = { version = "0.7.9", features = ["multipart"] }
base64 = "0.22.1"
bigdecimal = { version = "0.4.7", features = ["serde", "string-only"] }
bincode = { version = "=2.0.0-rc.3", features = ["serde"] }
bincode_derive = { version = "=2.0.0-rc.3" }
bytes = "1.10.1"
cap-std = "3.4.2" # keep in sync with wasmtime
chrono = { version = "0.4.40", features = ["serde"] }
clap = { version = "4.5.32", features = [
    "derive",
    "suggestions",
    "color",
    "help",
] }
cli-table = "0.4.9"
colored = "3.0.0"
combine = "4.6.7"
conditional-trait-gen = "0.4.1"
console-subscriber = "0.4.1"
dashmap = "6.1.0"
derive_more = { version = "2.0.1", features = ["display", "into", "from_str"] }
dirs = "4.0.0"
drop-stream = "0.3.2"
figment = { version = "0.10.19", features = ["toml", "env"] }
fred = { version = "=9.4.0", features = [
    "metrics",
    "serde-json",
    "partial-tracing",
] } # pinned to 9.x to avoid conflicting cookie-factory dependencies
futures = "0.3"
futures-core = "0.3.31"
futures-util = "0.3.31"
git-version = "0.3.9"
hex = "0.4.3"
http = "1.3.1"
http-body = "1.0.1"
http-body-util = "0.1.3"
humansize = "2.1.3"
humantime-serde = "1.1.1"
hyper = { version = "1.6.0", features = ["full"] }
include_dir = "0.7.4"
iso8601-timestamp = "0.3.3"
itertools = "0.14.0"
k8s-openapi = { version = "0.24.0", features = ["earliest"] }
kube = { version = "0.98.0", features = ["runtime", "derive"] }
kube-derive = "0.98.0"
lazy_static = "1.5.0"
log = "0.4.26"
nom = "7.1.3"
nonempty-collections = "0.3.0"
num-traits = "0.2.19"
once_cell = "1.21.0"
openapiv3 = "2.0.0"
openidconnect = "3.5.0"
opentelemetry = "0.28.0"
opentelemetry-prometheus = "0.28.0"
opentelemetry_sdk = "0.28.0"
poem-openapi = { version = "=5.1.5", features = [# pinned temporarily because 5.1.8 generats invalid OpenAPI yaml
    "swagger-ui",
    "chrono",
    "time",
    "humantime",
    "uuid",
    "url",
    "websocket",
] }
poem = { version = "=3.1.6", features = [
    "prometheus",
    "opentelemetry",
    "test",
] }
poem-openapi-derive = "=5.1.4"
postgres = "0.19.10"
prometheus = { version = "0.13.4", features = ["process"] }
proptest = "=1.5.0"
prost = "0.13.5"
prost-types = "0.13.5"
rand = "0.9.0"
redis = { version = "0.29.1", features = ["default", "tokio-comp"] }
regex = "1.11.1"
reqwest = { version = "0.12.13", features = [
    "gzip",
    "json",
    "multipart",
    "stream",
] }
rustls = { version = "0.23.23" }
rustyline = "15.0.0"
semver = "1.0.26"
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0", features = ["raw_value"] }
serde_yaml = { version = "0.9.34" }
sha2 = "0.10.8"
sqlx-core = { version = "0.8" }
sqlx = { version = "0.8", features = [
    "runtime-tokio",
    "sqlite",
    "postgres",
    "mysql",
    "uuid",
    "migrate",
    "chrono",
    "json",
    "bigdecimal",
    "mac_address",
    "bit-vec",
    "ipnetwork",
] }
strum = "0.27.1"
strum_macros = "0.27.1"
system-interface = "0.27.3"
tap = "1.0.1"
tempfile = "3.18.0"
testcontainers = { version = "0.23.3" }
testcontainers-modules = { version = "0.11.6", features = [
    "postgres",
    "redis",
    "minio",
    "mysql",
] }
test-r = { version = "2.1.0", default-features = true }
thiserror = "2.0.12"
tokio = { version = "1.44", features = [
    "macros",
    "rt-multi-thread",
    "sync",
    "io-std",
    "net",
    "tracing",
    "process",
] }
tokio-postgres = "0.7.13"
tokio-rustls = { version = "0.26.2" }
tokio-stream = { version = "0.1", features = ["sync"] }
tokio-tungstenite = { version = "0.25.0" }
tokio-util = "0.7.13"
toml = "0.8.20"
tonic = { version = "0.12.3", features = ["gzip"] }
tonic-reflection = "0.12.3"
tonic-health = "0.12.3"
tracing = { version = "0.1.41", features = ["log"] }
tracing-serde = "0.2.0"
tracing-subscriber = { version = "0.3.19", features = [
    "env-filter",
    "fmt",
    "std",
    "json",
] }
tracing-test = "0.2.5"
typed-path = "0.10.0"
url = { version = "2.5.4", features = ["serde"] }
urlencoding = "2.1.3"
uuid = { version = "1.15.1", features = ["serde", "v4", "v5"] }
wac-graph = "=0.6.1"
wasm-wave = "0.227.1"
wasmtime = { version = "=27.0.0", features = ["component-model"] }
wasmtime-wasi = { version = "=27.0.0" }
wasmtime-wasi-http = { version = "=27.0.0" }
wit-component = "0.227.1"
wit-parser = "0.227.1"

[patch.crates-io]
redis-protocol = { git = "https://github.com/golemcloud/redis-protocol.rs.git", branch = "unpin-cookie-factory" }
wasmtime = { git = "https://github.com/golemcloud/wasmtime.git", branch = "golem-wasmtime-v27.0.0" }
wasmtime-wasi = { git = "https://github.com/golemcloud/wasmtime.git", branch = "golem-wasmtime-v27.0.0" }
wasmtime-wasi-http = { git = "https://github.com/golemcloud/wasmtime.git", branch = "golem-wasmtime-v27.0.0" }
