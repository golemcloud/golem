package golem:agentic;

interface common {
    record agent-definition {
        agent-name:  string,
        description: string,
        methods:     list<agent-method>,
        requires:    list<agent-dependency>,
    }

    record agent-dependency {
        agent-name:   string,
        methods:      list<agent-method>,
    }

    record agent-method {
        name:          string,
        description:   string,
        prompt-hint:   option<string>,
        input-schema:  data-schema,
        output-schema: data-schema,
    }

    variant data-schema {
        structured(structured),
        multimodal(multimodal),
    }

    record structured {
        parameters: list<parameter-type>,
    }

    variant parameter-type {
        text(text-type),
    }

    record multimodal {
        text:   option<list<text-type>>,
    }

    variant data-value {
        text(string),
        structured(list<parameter-value>),
    }

    variant parameter-value {
        text(string),
    }

    record text-type {
        language-code: string,
    }


    record progress-report {
        description: string,
        counter:     option<progress-counter>,
    }

    record progress-counter {
        steps: u32,
        total: u32,
    }

    variant status-update {
        error(error),
        progress(option<progress-report>),
        emit(string),
    }

    variant error {
        network-error,
    }
}
