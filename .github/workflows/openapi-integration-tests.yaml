name: OpenAPI Integration Tests
on:
  push:
    paths:
      - 'golem-worker-service-base/src/gateway_api_definition/http/**'
      - 'golem-worker-service-base/tests/**'
      - '.github/workflows/openapi-integration-tests.yaml'
  pull_request:
    paths:
      - 'golem-worker-service-base/src/gateway_api_definition/http/**'
      - 'golem-worker-service-base/tests/**'
      - '.github/workflows/openapi-integration-tests.yaml'

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: debug
  CARGO_TERM_VERBOSE: true

jobs:
  openapi-integration-tests:
    name: Run OpenAPI Integration Tests
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "openapi-tests"

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Dependencies
        run: |
          cd golem-worker-service-base
          cargo build --all-features

      - name: Run Clippy
        run: |
          cd golem-worker-service-base
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Run OpenAPI Tests
        run: |
          cd golem-worker-service-base
          RUST_BACKTRACE=1 cargo test -p golem-worker-service-base gateway_api_definition::http -- --nocapture --format=json | tee test-output.json

      - name: Run Integration Tests
        run: |
          cd golem-worker-service-base
          RUST_BACKTRACE=1 cargo test --test api_gateway_end_to_end_tests -- --nocapture
          RUST_BACKTRACE=1 cargo test --test services_tests -- --nocapture

      - name: Check Swagger UI
        run: |
          cd golem-worker-service-base
          cargo test gateway_api_definition::http::swagger_ui::tests::test_swagger_ui_generation -- --nocapture

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            golem-worker-service-base/test-output.json
            golem-worker-service-base/target/debug/deps/test_*.xml 